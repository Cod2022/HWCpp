/*
Рассмотрим последовательность целых чисел длины n. 
По ней с шагом 1 двигается «окно» длины k. 
Другими словами, сначала в «окне» видны первые k чисел, 
на следующем шаге в «окне» уже будут находиться kk чисел, начиная со второго, 
и так далее до конца последовательности. 
Требуется для каждого положения «окна» определить в нём минимальное число.

Формат ввода

В первой строке входных данных содержатся два натуральных числа n и k 
— длины последовательности и «окна». 
При этом n⩽150000, k⩽10000, k⩽n. 
На следующей строке находятся n чисел — сама последовательность.

Формат вывода

Выходые данные должны содержать n−k+1 строк — минимумы для каждого положения «окна».
*/

#include <iostream>
#include <queue>
#include <set>
 
int main() {
    int n, k;
    std::cin >> n >> k;
 
    std::queue<int> numbers;
    std::multiset<int> window;
 
    for (int i = 1; i <= n; ++i) {
        int x;
        std::cin >> x;
        numbers.push(x);
        window.insert(x);
        if (i >= k) {
            std::cout << *window.begin() << "\n";
            auto iter = window.find(numbers.front());
            window.erase(iter);
            numbers.pop();
        }
    }
}
