/*
Напишите программу, которая будет обрабатывать последовательность запросов таких видов:

    CLEAR — сделать очередь с приоритетами пустой (если в очереди уже были какие-то элементы, 
    то удалить все).

    ADD n — добавить в очередь с приоритетами число n (вмещается в стандартный тип int).

    EXTRACT — вынуть из очереди с приоритетами максимальное значение. 
    Следует изменить данные в памяти и вывести на экран найденное максимальное значение, 
    или, если очередь была пустой, слово CANNOT.

Формат ввода

Во входных данных записана произвольная последовательность запросов 
CLEAR, ADD и EXTRACT — каждый в отдельной строке. 
Суммарное количество всех запросов не превышает 200000.

Формат вывода

Для каждого запроса типа EXTRACT выведите его результат в отдельной строке.
*/
#include <iostream>
#include <string>
#include <queue>

int main() {
    std::priority_queue<int> pq;

    std::string request;
    while (std::cin >> request) {
        if (request == "CLEAR") {
            while (!pq.empty()) {
                pq.pop();
            }
        } else if (request == "ADD") {
            int num;
            std::cin >> num;
            pq.push(num);
        } else if (request == "EXTRACT") {
            if (pq.empty()) {
                std::cout << "CANNOT";
            } else {
                std::cout << pq.top() << "\n";
                pq.pop();
            }
        }
    }
}